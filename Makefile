# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate
###############################################################################
# Project settings

PROJECT := KL25Z_SIMcom_tsh

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
    SCP = '$(SHELL)' -c "scp  \"$(1)\" 192.168.1.124:/SMB/"  
    # SCP = '$(SHELL)' -c "scp  \"$(1)\" opizero3:/SMB/"  
endif

OBJDIR := BUILD
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))
scp :
	$(call SCP,$(OBJDIR)/$(PROJECT).bin)

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate



# Project settings
###############################################################################
# Objects and Paths

OBJECTS += flash/FreescaleIAP.o
OBJECTS += main.o
OBJECTS += mbed-dev/drivers/AnalogIn.o
OBJECTS += mbed-dev/drivers/BusIn.o
OBJECTS += mbed-dev/drivers/BusInOut.o
OBJECTS += mbed-dev/drivers/BusOut.o
OBJECTS += mbed-dev/drivers/CAN.o
OBJECTS += mbed-dev/drivers/Ethernet.o
OBJECTS += mbed-dev/drivers/FileBase.o
OBJECTS += mbed-dev/drivers/FilePath.o
OBJECTS += mbed-dev/drivers/FileSystemLike.o
OBJECTS += mbed-dev/drivers/FlashIAP.o
OBJECTS += mbed-dev/drivers/I2C.o
OBJECTS += mbed-dev/drivers/I2CSlave.o
OBJECTS += mbed-dev/drivers/InterruptIn.o
OBJECTS += mbed-dev/drivers/InterruptManager.o
OBJECTS += mbed-dev/drivers/LocalFileSystem.o
OBJECTS += mbed-dev/drivers/RawSerial.o
OBJECTS += mbed-dev/drivers/SPI.o
OBJECTS += mbed-dev/drivers/SPISlave.o
OBJECTS += mbed-dev/drivers/Serial.o
OBJECTS += mbed-dev/drivers/SerialBase.o
OBJECTS += mbed-dev/drivers/Stream.o
OBJECTS += mbed-dev/drivers/Ticker.o
OBJECTS += mbed-dev/drivers/Timeout.o
OBJECTS += mbed-dev/drivers/Timer.o
OBJECTS += mbed-dev/drivers/TimerEvent.o
OBJECTS += mbed-dev/hal/mbed_gpio.o
OBJECTS += mbed-dev/hal/mbed_lp_ticker_api.o
OBJECTS += mbed-dev/hal/mbed_pinmap_common.o
OBJECTS += mbed-dev/hal/mbed_ticker_api.o
OBJECTS += mbed-dev/hal/mbed_us_ticker_api.o
OBJECTS += mbed-dev/platform/CallChain.o
OBJECTS += mbed-dev/platform/mbed_alloc_wrappers.o
OBJECTS += mbed-dev/platform/mbed_application.o
OBJECTS += mbed-dev/platform/mbed_assert.o
OBJECTS += mbed-dev/platform/mbed_board.o
OBJECTS += mbed-dev/platform/mbed_critical.o
OBJECTS += mbed-dev/platform/mbed_error.o
OBJECTS += mbed-dev/platform/mbed_interface.o
OBJECTS += mbed-dev/platform/mbed_mem_trace.o
OBJECTS += mbed-dev/platform/mbed_retarget.o
OBJECTS += mbed-dev/platform/mbed_rtc_time.o
OBJECTS += mbed-dev/platform/mbed_semihost_api.o
OBJECTS += mbed-dev/platform/mbed_stats.o
OBJECTS += mbed-dev/platform/mbed_wait_api_no_rtos.o
OBJECTS += mbed-dev/platform/mbed_wait_api_rtos.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/PeripheralPins.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device/TOOLCHAIN_GCC_ARM/startup_MKL25Z4.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device/cmsis_nvic.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device/system_MKL25Z4.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/gpio_irq_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/mbed_overrides.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/serial_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/spi_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/analogin_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/analogout_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/gpio_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/i2c_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/pinmap.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/port_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/pwmout_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/rtc_api.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/sleep.o
OBJECTS += mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/us_ticker.o
OBJECTS += misc/time_utils.o
OBJECTS += misc/sys.o
OBJECTS += simCom/simCom.o
OBJECTS += simCom/simGPS.o
OBJECTS += tinyshell/tinysh.o
OBJECTS += tinyshell/tinysh_setup.o


INCLUDE_PATHS += -I../
INCLUDE_PATHS += -I../.
INCLUDE_PATHS += -I../flash
INCLUDE_PATHS += -I../mbed-dev
INCLUDE_PATHS += -I../mbed-dev/cmsis
INCLUDE_PATHS += -I../mbed-dev/cmsis/TOOLCHAIN_GCC
INCLUDE_PATHS += -I../mbed-dev/drivers
INCLUDE_PATHS += -I../mbed-dev/hal
INCLUDE_PATHS += -I../mbed-dev/hal/storage_abstraction
INCLUDE_PATHS += -I../mbed-dev/platform
INCLUDE_PATHS += -I../mbed-dev/targets
INCLUDE_PATHS += -I../mbed-dev/targets/TARGET_Freescale
INCLUDE_PATHS += -I../mbed-dev/targets/TARGET_Freescale/TARGET_KLXX
INCLUDE_PATHS += -I../mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z
INCLUDE_PATHS += -I../mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device
INCLUDE_PATHS += -I../mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device/TOOLCHAIN_GCC_ARM
INCLUDE_PATHS += -I../misc
INCLUDE_PATHS += -I../simCom
INCLUDE_PATHS += -I../tinyshell

LIBRARY_PATHS :=
LIBRARIES :=
LINKER_SCRIPT ?= ../mbed-dev/targets/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/device/TOOLCHAIN_GCC_ARM/MKL25Z4.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = 'arm-none-eabi-gcc' '-x' 'assembler-with-cpp' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0plus' '-mthumb'
CC      = 'arm-none-eabi-gcc' '-std=gnu99' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0plus' '-mthumb'
CPP     = 'arm-none-eabi-g++' '-std=gnu++98' '-fno-rtti' '-Wvla' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0plus' '-mthumb'
LD      = 'arm-none-eabi-gcc'
ELF2BIN = 'arm-none-eabi-objcopy'
PREPROC = 'arm-none-eabi-cpp' '-E' '-P' '-Wl,--gc-sections' '-Wl,--wrap,main' '-Wl,--wrap,_malloc_r' '-Wl,--wrap,_free_r' '-Wl,--wrap,_realloc_r' '-Wl,--wrap,_calloc_r' '-Wl,--wrap,exit' '-Wl,--wrap,atexit' '-mcpu=cortex-m0plus' '-mthumb'


C_FLAGS += -std=gnu99
C_FLAGS += -DTARGET_KL25Z
C_FLAGS += -D__MBED__=1
C_FLAGS += -DDEVICE_I2CSLAVE=1
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DTARGET_Freescale
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1491377213.99
C_FLAGS += -DTOOLCHAIN_object
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_KLXX
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -DTARGET_M0P
C_FLAGS += -DDEVICE_ANALOGOUT=1
C_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -D__CORTEX_M0PLUS
C_FLAGS += -DDEVICE_STDIO_MESSAGES=1
C_FLAGS += -DTARGET_FF_ARDUINO
C_FLAGS += -DTARGET_RELEASE
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DARM_MATH_CM0PLUS
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DDEVICE_SLEEP=1
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DDEVICE_ERROR_RED=1
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DDEVICE_SEMIHOST=1
C_FLAGS += -DTARGET_LIKE_CORTEX_M0
C_FLAGS += -include
C_FLAGS += mbed_config.h

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -DTARGET_KL25Z
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DDEVICE_I2CSLAVE=1
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DTARGET_Freescale
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -DTOOLCHAIN_object
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_KLXX
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -DTARGET_M0P
CXX_FLAGS += -DDEVICE_ANALOGOUT=1
CXX_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -D__CORTEX_M0PLUS
CXX_FLAGS += -DDEVICE_STDIO_MESSAGES=1
CXX_FLAGS += -DTARGET_FF_ARDUINO
CXX_FLAGS += -DTARGET_RELEASE
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DARM_MATH_CM0PLUS
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DDEVICE_SLEEP=1
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DDEVICE_ERROR_RED=1
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DDEVICE_SEMIHOST=1
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M0
CXX_FLAGS += -DMBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE=115200
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1491213245.14
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -D__CMSIS_RTOS
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -D__CORTEX_M0PLUS
ASM_FLAGS += -DARM_MATH_CM0PLUS


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -mcpu=cortex-m0plus -mthumb 
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: $(PROJECT).bin $(PROJECT).hex size


.asm.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter %.ld, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@
	+@echo "===== bin file ready to flash: $(OBJDIR)/$@ =====" 

$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@


# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
